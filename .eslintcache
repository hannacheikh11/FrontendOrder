[{"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\index.js":"1","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\App.js":"2","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Products.js":"4","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\util.js":"5","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Cart.js":"6","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\api.js":"7","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Delete.js":"8","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\GetOrders.js":"9","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Edite.js":"10","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\newOrder.js":"11","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\to.js":"12"},{"size":547,"mtime":1611439040984,"results":"13","hashOfConfig":"14"},{"size":4708,"mtime":1611683183578,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1073,"mtime":1611321981261,"results":"17","hashOfConfig":"14"},{"size":139,"mtime":1609781376092,"results":"18","hashOfConfig":"14"},{"size":6541,"mtime":1611532521298,"results":"19","hashOfConfig":"14"},{"size":107,"mtime":1611264950161,"results":"20","hashOfConfig":"14"},{"size":1207,"mtime":1611416693323,"results":"21","hashOfConfig":"14"},{"size":6579,"mtime":1611713314430,"results":"22","hashOfConfig":"14"},{"size":1009,"mtime":1611435608490,"results":"23","hashOfConfig":"14"},{"size":2851,"mtime":1611607545322,"results":"24","hashOfConfig":"14"},{"size":5580,"mtime":1611574020393,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xqcnq7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\index.js",[],["57","58"],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\App.js",["59"],"\nimport React from \"react\";\nimport Cart from \"./components/Cart\";\nimport Products from \"./components/Products\";\nimport data from \"./data.json\";\n\nimport Modal from \"react-modal\";\nimport Zoom from \"react-reveal/Zoom\";\nimport order from \"./components/Cart\";\n\n\nimport GetOrders from \"./components/GetOrders\";\nimport Edite from \"./components/Edite\";\nimport generalGet from \"./components/to\";\n\n\n\n class App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n    products: data.products,\n    cartItems: localStorage.getItem(\"cartItems\")\n        ? JSON.parse(localStorage.getItem(\"cartItems\"))\n        : [],\n    }\n  }\n\n\n  \n  //createOrder = (order) => {\n    \n  //  alert(\"Your order \" + order.name);\n   // axios.post('/api/v1/orders', { order })\n   // .then(res => {\n     // console.log(res);\n      ////console.log(res.data);\n     \n\n   // })\n  \n//  .catch(error => {\n   // console.log(error)\n // })\n//}\n\n  //el metodo close modedl\n\n  closeModal = () => {\n    this.state.order=null\n  };\n\n\n \n\n\n  \n  // el methodo eliminar un producto del pedido\nremoveFromCart=(product)=>{\n  const cartItems = this.state.cartItems.slice();\n  this.setState({\n    cartItems: cartItems.filter((x)=> x._id !==product._id)\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify( cartItems.filter((x)=> x._id !==product._id)));\n}\n// el methodo añdir un producto al pedido\n  addToCart=(product) => {\n    const cartItems = this.state.cartItems.slice();\n    let alreadyInCart=false;\n    cartItems.forEach((item) =>{\n      if(item.codigo=== product.codigo){\n        item.count++;\n        alreadyInCart=true;\n      }\n    });\n    if(!alreadyInCart)\n{\n  cartItems.push({...product, count: 1})\n} \nthis.setState({cartItems});\n// persistencia de mi pagina \n\n }\n\n\n\n  render() {\n\n   return (\n    \n    <div className=\"grid-container\">\n  <header>\n              <a href=\"/\">Order</a>\n               \n              </header>\n              <main>\n               <div className= \"content\">\n               <div className= \"main\"> \n              \n               \n               <Products \n               products={this.state.products}\n               addToCart={this.addToCart}></Products> </div>\n               \n               <div className= \"sidebar\"> <Cart cartItems={this.state.cartItems} removeFromCart={this.removeFromCart}  createOrder={this.createOrder} removeFromOrder={this.removeFromOrder}/> </div>\n\n\n\n\n               {this.state.order ?(\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className=\"close-modal\" onClick={this.closeModal}>\n                x\n              </button>\n              <div className=\"order-details\">\n                <h3 className=\"success-message\">Your order.</h3>\n                <h2>Order {order._id}</h2>\n                <ul>\n                  <li>\n                    <div>Name:</div>\n                    <div>{this.state.order.Name}</div>\n                  </li>\n\n                  <li>\n                    <div>DNI:</div>\n                    <div>{this.state.order.DNI}</div>\n                  </li>\n                  <li>\n\n                    \n                    <div>Email:</div>\n                    <div>{this.state.order.email}</div>\n                  </li>\n                  <li>\n                    <div>Address:</div>\n                    <div>{this.state.order.address}</div>\n                  </li>\n                  <li>\n                    <div>Date created:</div>\n                    <div>{this.state.order.created}</div>\n                  </li>\n                  <li>\n                    <div>Total:</div>\n                    <div>{this.state.order.total}€</div>\n                    <li>\n                    <button\n                        className=\"button\"\n                        onClick={() => this.props.removeFromOrder(order._id)}\n                      >\n                        Remove Order\n                      </button>\n                      </li>\n                   \n                  </li>\n                  <li>\n                    <div>Cart Items:</div>\n                    <div>\n                      {order.cartItems.map((x) => (\n                        <div>\n                          {x.count} {\" x \"} {x.title}\n                        </div>\n                      ))}\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </Zoom>\n          </Modal>\n        ):\"\"}\n\n\n<generalGet/>\n<GetOrders/>\n<label> Edite you order:</label>\n<Edite/>\n\n\n\n               </div>\n             </main> \n               <footer>\n                 All rignt\n               </footer>\n             \n             \n              </div>\n            \n  );\n}\n}\nexport default App;\n\n\n","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Products.js",["60"],"import React, { Component } from \"react\";\r\nimport App from \"../App\";\r\n\r\nexport class Products extends Component{\r\n\r\n\r\n    render (){\r\n        return(\r\n        <div>\r\n            <lu className=\"products\">\r\n\r\n                {this.props.products.map(product =>(\r\n                    <li key = {product._id}>\r\n                         <div className=\"product\">\r\n\r\n                             <a href={\"#\" + product._id}>\r\n                                 \r\n                                 <img src={product.image} alt={product.title}></img>\r\n                             <p>\r\n                                 {product.title}\r\n                             </p>\r\n                             </a>\r\n<div className=\"product-price\">\r\n    <div>\r\n        {product.price}€\r\n    </div>\r\n    <button onClick={()=>this.props.addToCart(product)} className=\"button primary\">\r\n        add to Order\r\n    </button>\r\n\r\n</div>\r\n</div>            \r\n                    </li>\r\n                ))}\r\n            </lu>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n      \r\nexport default Products;","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\util.js",["61"],"  \r\nexport default {\r\n    formatCurrency: function (num) {\r\n        return '€' + Number(num.toFixed(1)).toLocaleString() + ' ';\r\n    }\r\n}",["62","63"],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Cart.js",["64","65","66"],"import React, { Component } from \"react\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport axios from 'axios';\r\nimport Modal from \"react-modal\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n//import API from '../api';\r\nimport api from \"../api\";\r\nimport Delete from \"./Delete\";\r\nimport NewOrder from \"./newOrder\";\r\n\r\n\r\n  class Cart extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cod:'',\r\n      name: \"\",\r\n      DNI:\"\",\r\n      email: \"\",\r\n      Adress: \"\",\r\n      order:null,\r\n     \r\n      showCheckout: false,\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  handleInput = event => {\r\n    this.setState({ \r\n        cod: event.target.value,\r\n        name: event.target.value,\r\n        DNI: event.target.value,\r\n        address:event.target.value,\r\n        email: event.target.value,\r\n        \r\n        //count:event.target.value,\r\n        total:event.target.value,\r\n    });\r\n  };\r\n  \r\n  \r\n  createOrder = event => {\r\n    event.preventDefault();\r\n    const valor = {\r\n      cod:this.state.cod,\r\n      name: this.state.name,\r\n      DNI: this.state.DNI,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      total: this.state.total,\r\n      cartItems: this.props.cartItems,\r\n      //count: this.props.cartItems,\r\n      //total: this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0),\r\n  };\r\n      //this.setState({order:order});\r\n      //this.props.createOrder(order);\r\n      alert(\"Your order \" );\r\n    axios.post('/api/v1/orders', { ...valor})\r\n    .then(res => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n     \r\n\r\n    })\r\n  \r\n  .catch(error => {\r\n    console.log(error)\r\n  })\r\n  };\r\n\r\n \r\n\r\n  render() {\r\n    const { cartItems } = this.props;\r\n    return (\r\n      <div>\r\n        {cartItems.length === 0 ? (\r\n          <div className=\"cart cart-header\">Cart is empty</div>\r\n        ) : (\r\n          <div className=\"cart cart-header\">\r\n            You have {cartItems.length} in the cart{\" \"}\r\n          </div>\r\n        )}\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <div className=\"cart\">\r\n            <ul className=\"cart-items\">\r\n              {cartItems.map((item) => (\r\n                <li key={item.codigo}>\r\n                  <div>\r\n                    <img src={item.image} alt={item.title}></img>\r\n                  </div>\r\n                  <div>\r\n                    <div>{item.title}</div>\r\n                    <div className=\"right\">\r\n                      {item.price} x {item.count}{\" \"}\r\n\r\n                      <button\r\n                        className=\"button\"\r\n                        onClick={() => this.props.removeFromCart(item)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {cartItems.length !== 0 && (\r\n            <div>\r\n              <div className=\"cart\">\r\n                <div className=\"total\">\r\n                  <div>\r\n                    Total:{\" \"}\r\n                    {\r\n                      cartItems.reduce((a, c) => a + c.price * c.count, 0)\r\n                    }\r\n                  </div>\r\n\r\n\r\n\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({ showCheckout: true });\r\n                    }}\r\n                    className=\"button primary\"\r\n                  >\r\n                    Confirmation\r\n                  </button>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n                \r\n              </div>\r\n\r\n              \r\n              {this.state.showCheckout && (\r\n                 <Fade right cascade>\r\n                <div className=\"cart\">\r\n                  <form onSubmit={this.createOrder}>\r\n                    <ul className=\"form-container\">\r\n                    <li>\r\n                        <label>cod de 9 num</label>\r\n                        <input\r\n                          name=\"cod\"\r\n                          type=\"text\"\r\n                          required\r\n                          onChange={this.handleInput}\r\n                        ></input>\r\n                        \r\n                      </li>\r\n                      <li>\r\n                        <label>Name</label>\r\n                        <input\r\n                          name=\"name\"\r\n                          type=\"text\"\r\n                          required\r\n                          onChange={this.handleInput}\r\n                        ></input>\r\n                      </li>\r\n\r\n                      <li>\r\n                        <label>DNI</label>\r\n                        <input\r\n                          DNI=\"DNI\"\r\n                          type=\"text\"\r\n                          required\r\n                          onChange={this.handleInput}\r\n                        ></input>\r\n                      </li>\r\n                      <li>\r\n                        <label>address</label>\r\n                        <input\r\n                          name=\"address\"\r\n                          type=\"text\"\r\n                          required\r\n                          onChange={this.handleInput}\r\n                        ></input>\r\n                      </li>\r\n                      <li>\r\n                        <label>Email</label>\r\n                        <input\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          required\r\n                          onChange={this.handleInput}\r\n                        ></input>\r\n                        \r\n                      </li>\r\n\r\n                      <li>\r\n                        <label>Total Shop</label>\r\n                        <input\r\n                          name=\"total\"\r\n                          type=\"Number\"\r\n                          required\r\n                          onChange={this.handleInput}\r\n                        ></input>\r\n                        \r\n                      </li>\r\n                     \r\n\r\n                    \r\n                      \r\n                      <li>\r\n                        <button className=\"button primary\" type=\"submit\">\r\n                          Done\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </form>\r\n                </div></Fade>\r\n              )}\r\n\r\n              </div>\r\n                \r\n\r\n\r\n          )}\r\n        </div>\r\n<NewOrder/>\r\n<label>If you wante delete your order please clik her:</label>\r\n         <Delete/>     \r\n                \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Cart;","C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\api.js",[],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Delete.js",[],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\GetOrders.js",["67"],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\Edite.js",[],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\newOrder.js",[],"C:\\Users\\hanna\\OneDrive\\Documentos\\order-frontend\\src\\components\\to.js",["68"],"\r\n  \r\nimport React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\n\r\n\r\nexport default class generalGet extends React.Component {\r\n  state={\r\n    data:[],\r\n    modalInsertar: false,\r\n    modalEliminar: false,\r\n    form:{\r\n      cod:'',\r\n      name: \"\",\r\n      DNI:\"\",\r\n      address:\"\",\r\n      email: \"\",\r\n    }\r\n  }\r\n\r\npeticionGet=()=>{\r\naxios.get('/api/v1/orders').then(response=>{\r\n  this.setState({data: response.data});\r\n}).catch(error=>{\r\n  console.log(error.message);\r\n})\r\n}\r\n\r\npeticionPost=async()=>{\r\n  delete this.state.form.cod;\r\n await axios.post('/api/v1/orders',this.state.form).then(response=>{\r\n    this.modalInsertar();\r\n    this.peticionGet();\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionPut=()=>{\r\n  axios.put('/api/v1/orders'+this.state.form.cod, this.state.form).then(response=>{\r\n    this.modalInsertar();\r\n    this.peticionGet();\r\n  })\r\n}\r\n\r\npeticionDelete=()=>{\r\n  axios.delete('/api/v1/orders'+this.state.form.cod).then(response=>{\r\n    this.setState({modalEliminar: false});\r\n    this.peticionGet();\r\n  })\r\n}\r\n\r\nmodalInsertar=()=>{\r\n  this.setState({modalInsertar: !this.state.modalInsertar});\r\n}\r\n\r\nseleccionarEmpresa=(empresa)=>{\r\n  this.setState({\r\n    tipoModal: 'actualizar',\r\n    form: {\r\n      cod: empresa.cod,\r\n      name: empresa.name,\r\n      DNI: empresa.DNI,\r\n     address:empresa.address,\r\n     email:empresa.email\r\n    }\r\n  })\r\n}\r\n\r\nhandleChange=async e=>{\r\ne.persist();\r\nawait this.setState({\r\n  form:{\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n});\r\nconsole.log(this.state.form);\r\n}\r\n\r\n  componentDidMount() {\r\n    this.peticionGet();\r\n  }\r\n  \r\n\r\n  render(){\r\n    const {form}=this.state;\r\n  return (\r\n    <div className=\"App\">\r\n    <br /><br /><br />\r\n  <button className=\"btn btn-success\" onClick={()=>{this.setState({form: null, tipoModal: 'insertar'}); this.modalInsertar()}}>Agregar Order</button>\r\n  <br /><br />\r\n    <table className=\"table \">\r\n      <thead>\r\n        <tr>\r\n          <th>cod</th>\r\n          <th>name</th>\r\n          <th>DNI</th>\r\n          <th>adress</th>\r\n          <th>email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.data.map(empresa=>{\r\n          return(\r\n            <tr>\r\n          <td>{empresa.cod}</td>\r\n          <td>{empresa.name}</td>\r\n          <td>{empresa.DNI}</td>\r\n          <td>{empresa.address}</td>\r\n          <td>{empresa.email}</td>\r\n          <td>\r\n                <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarEmpresa(empresa); this.modalInsertar()}}><FontAwesomeIcon icon={faEdit}/></button>\r\n                {\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>{this.seleccionarEmpresa(empresa); this.setState({modalEliminar: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n                </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n\r\n    <Modal isOpen={this.state.modalInsertar}>\r\n                <ModalHeader style={{display: 'block'}}>\r\n                  <span style={{float: 'right'}} onClick={()=>this.modalInsertar()}>x</span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"id\">cod</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"cod\" id=\"cod\" readOnly onChange={this.handleChange} value={form?form.cod:''}/>\r\n                    <br />\r\n                    <label htmlFor=\"nombre\">name</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} value={form?form.name: ''}/>\r\n                    <br />\r\n                    <label htmlFor=\"nombre\">DNI</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"DNI\" id=\"DNI\" onChange={this.handleChange} value={form?form.DNI: ''}/>\r\n                    <br />\r\n                    <label htmlFor=\"capital_bursatil\">address</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"address\" id=\"address\" onChange={this.handleChange} value={form?form.address:''}/>\r\n                    <input className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" onChange={this.handleChange} value={form?form.email:''}/>\r\n                  </div>\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                  {this.state.tipoModal=='insertar'?\r\n                    <button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>\r\n                    Insertar\r\n                  </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>\r\n                    Actualizar\r\n                  </button>\r\n  }\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</button>\r\n                </ModalFooter>\r\n          </Modal>\r\n\r\n\r\n          <Modal isOpen={this.state.modalEliminar}>\r\n            <ModalBody>\r\n               Estás seguro que deseas eliminar tu order {form && form.cod}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <button className=\"btn btn-danger\" onClick={()=>this.peticionDelete()}>Sí</button>\r\n              <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminar: false})}>No</button>\r\n            </ModalFooter>\r\n          </Modal>\r\n  </div>\r\n\r\n\r\n\r\n  );\r\n}\r\n}\r\n\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":50,"column":5,"nodeType":"75","endLine":50,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":11},{"ruleId":"80","severity":1,"message":"81","line":2,"column":1,"nodeType":"82","endLine":6,"endColumn":2},{"ruleId":"69","replacedBy":"83"},{"ruleId":"71","replacedBy":"84"},{"ruleId":"76","severity":1,"message":"85","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"86","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":12},{"ruleId":"76","severity":1,"message":"87","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":11},{"ruleId":"88","severity":1,"message":"89","line":172,"column":40,"nodeType":"90","messageId":"91","endLine":172,"endColumn":42},{"ruleId":"88","severity":1,"message":"89","line":153,"column":40,"nodeType":"90","messageId":"91","endLine":153,"endColumn":42},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["92"],["93"],"'Modal' is defined but never used.","'Zoom' is defined but never used.","'api' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]